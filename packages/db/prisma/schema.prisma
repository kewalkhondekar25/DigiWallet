// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  password        String
  isVerified      Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  Otps            Otps?
  wallet_balances wallet_balances?
  on_ramp_txn     on_ramp_txn[]
}

model Otps {
  id         Int       @id @default(autoincrement())
  otp        String
  retryCount Int       @default(0)
  blockUntil DateTime?
  expiresAt  DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user_id Int   @unique
  user    Users @relation(fields: [user_id], references: [id])
}

model wallet_balances {
  id        Int      @id @default(autoincrement())
  amount    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user_id Int   @unique
  user    Users @relation(fields: [user_id], references: [id])
}

model on_ramp_txn {
  id             Int         @id @default(autoincrement())
  on_ramp_txn_id String?
  amount         Int         @default(0)
  status         txn_status?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  user_id Int
  user    Users @relation(fields: [user_id], references: [id])
}

enum txn_status {
  PROCESSING
  SUCCESS
  FAIL
}
